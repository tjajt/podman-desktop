{
  "name": "kubectl-cli",
  "displayName": "kubectl CLI",
  "description": "Install and update kubectl CLI Tools without leaving Podman Desktop",
  "version": "0.0.1",
  "icon": "icon.png",
  "publisher": "podman-desktop",
  "license": "Apache-2.0",
  "engines": {
    "podman-desktop": "^0.0.1"
  },
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "kubectl.install",
        "title": "kubectl: Install..."
      },
      {
        "command": "kubectl.checks",
        "title": "kubectl: Checks..."
      },
      {
        "command": "kubectl.onboarding.checkDownloadedCommand",
        "title": "kubectl: Check kubectl Downloaded"
      },
      {
        "command": "kubectl.onboarding.downloadCommand",
        "title": "kubectl: Download kubectl"
      }
    ],
    "onboarding": {
      "title": "kubectl Setup",
      "enablement": "!kubectl.isKubectlInstalledSystemWide",
      "steps": [
        {
          "id": "checkDownloadedCommand",
          "label": "Check kubectl",
          "title": "Checking for kubectl installation",
          "command": "kubectl.onboarding.checkDownloadedCommand",
          "completionEvents": [
            "onCommand:kubectl.onboarding.checkDownloadedCommand"
          ]
        },
        {
          "id": "welcomeDownloadView",
          "label": "kubectl Download",
          "title": "kubectl Download",
          "when": "onboardingContext:kubectlIsNotDownloaded == true",
          "content": [
            [
              {
                "value": "kubectl support in Podman Desktop enables you to use kubectl CLI ."
              }
            ],
            [
              {
                "value": "kubectl will be downloaded in the next step (Version ${onboardingContext:kubectlDownloadVersion}). :link[Want to download a different version?]{command=kubectl.onboarding.promptUserForVersion}",
                "when": "!onboardingContext:kubectlShowCustomDownloadDialog"
              }
            ]
          ]
        },
        {
          "id": "downloadCommand",
          "title": "Downloading kubectl ${onboardingContext:kubectlDownloadVersion}",
          "description": "Downloading the binary.\n\nOnce downloaded, the next step will install kubectl system-wide.",
          "when": "onboardingContext:kubectlIsNotDownloaded == true",
          "command": "kubectl.onboarding.downloadCommand",
          "completionEvents": [
            "onCommand:kubectl.onboarding.downloadCommand"
          ]
        },
        {
          "id": "downloadFailure",
          "title": "Failed Downloading kubectl",
          "when": "onboardingContext:kubectlIsNotDownloaded == true",
          "state": "failed"
        },
        {
          "id": "downloadSuccessfulView",
          "title": "kubectl Successfully Downloaded",
          "when": "onboardingContext:kubectlIsNotDownloaded == false",
          "content": [
            [
              {
                "value": "kubectl has been successfully downloaded! In order to use kubectl from a shell, it is required for kubectl to be installed system-wide.\n\nThe next step will install kubectl system-wide. **You will be prompted for system privileges when enabling this.**"
              }
            ]
          ]
        },
        {
          "id": "installSystemWideCommand",
          "title": "Install kubectl",
          "description": "Installing the binary system-wide.\n\n You may be prompted for elevated system privileges.",
          "when": "kubectl.isKubectlInstalledSystemWide == false",
          "command": "kubectl.onboarding.installSystemWideCommand",
          "completionEvents": [
            "onCommand:kubectl.onboarding.installSystemWideCommand"
          ]
        },
        {
          "id": "installSystemWideFailure",
          "title": "Failed Installing kubectl",
          "when": "kubectl.isKubectlInstalledSystemWide == false",
          "state": "failed"
        },
        {
          "id": "installSystemWideSuccess",
          "title": "kubectl Successfully Installed",
          "when": "kubectl.isKubectlInstalledSystemWide == true",
          "state": "completed",
          "content": [
            [
              {
                "value": "kubectl has been successfully installed system-wide!"
              }
            ]
          ]
        }
      ]
    },
    "configuration": {
      "title": "Kubectl",
      "properties": {
        "kubectl.binary.installKubectlSystemWide": {
          "type": "boolean",
          "default": false,
          "scope": [
            "DEFAULT",
            "Onboarding"
          ],
          "hidden": true,
          "description": "Install system-wide instead of just your user directory, so kubectl can be accessed on the command line. Note: You may be prompted for elevated system privileges when enabling this."
        }
      }
    }
  },
  "scripts": {
    "build": "vite build && node ./scripts/build.js",
    "test": "vitest run --coverage",
    "watch": "vite build -w",
    "format:check": "prettier --check \"**/*.ts\" \"scripts/*.js\"",
    "format:fix": "prettier --write \"**/*.ts\" \"scripts/*.js\""
  },
  "dependencies": {
    "@podman-desktop/api": "^0.0.1",
    "@octokit/rest": "^20.0.2",
    "shell-path": "^3.0.0"
  },
  "devDependencies": {
    "adm-zip": "^0.5.10",
    "byline": "^5.0.0",
    "copyfiles": "^2.4.1",
    "mkdirp": "^3.0.1",
    "vitest": "^1.0.4"
  }
}
